// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "summary": "Echo route to ckeck if server is alive",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/modify-user-segments": {
            "put": {
                "description": "user and segments exist in the database.\nif not, error is returned.",
                "summary": "modifies users segments",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.userSegmentsModifyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.userModifyErrorResponse"
                        }
                    }
                }
            }
        },
        "/user-report/{filename}": {
            "get": {
                "summary": "downloads report ebout user activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/{segmentName}": {
            "post": {
                "summary": "Creates segment with name specified in url and audience_cvg in body",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Segment Name",
                        "name": "segmentName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.createSegmentBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "summary": "Deletes segment with name specified in url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Segment Name",
                        "name": "segmentName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/{userId}": {
            "get": {
                "summary": "Get user active segments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.userSegmentsResponseBody"
                        }
                    }
                }
            }
        },
        "/{userId}/{year}/{month}": {
            "get": {
                "description": "returnes url to report file or an error",
                "summary": "Creates report about user segment acivity inspecified month",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Month",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.createSegmentBody": {
            "type": "object",
            "properties": {
                "audience_cvg": {
                    "type": "integer"
                }
            }
        },
        "main.userModifyErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "segments_add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "segments_remove": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "main.userSegmentsModifyBody": {
            "type": "object",
            "properties": {
                "segments_add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "segments_remove": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.userSegmentsResponseBody": {
            "type": "object",
            "properties": {
                "segments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
